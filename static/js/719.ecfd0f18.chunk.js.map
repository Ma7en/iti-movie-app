{"version":3,"file":"static/js/719.ecfd0f18.chunk.js","mappings":"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","sources":["components/movie/AddWatchLater.jsx","components/movie/Rating.jsx","components/movie/MovieCard.jsx","components/movie/Stars.jsx","components/details/NoRecommendation.jsx","components/details/Recommendations.jsx","components/details/DetailsCard.jsx","pages/details/MovieDetails.jsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useContext } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// font awesome icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHeart as Heart } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\n// store\r\nimport { toggleWatchList } from \"../../store/slices/watchlistSlice\";\r\n\r\n// context\r\nimport themeContext from \"../../context/themeContext\";\r\nimport languageContext from \"../../context/languageContext\";\r\n\r\nfunction AddWatchLater({ movie }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const { darkMode, setDarkMode } = useContext(themeContext);\r\n    const { language, setLanguage } = useContext(languageContext);\r\n\r\n    const [selected, setSelected] = useState(false);\r\n\r\n    const { watchlist } = useSelector((state) => state.watchlist);\r\n\r\n    useEffect(() => {\r\n        setSelected(watchlist.includes(movie));\r\n    }, [movie, watchlist]);\r\n\r\n    return (\r\n        <>\r\n            <FontAwesomeIcon\r\n                className={` fs-3 ${\r\n                    selected\r\n                        ? \"text-warning\"\r\n                        : darkMode\r\n                        ? \"text-white\"\r\n                        : \"text-black-50\"\r\n                } `}\r\n                style={{ right: \"10px\", top: \"15px\" }}\r\n                role=\"button\"\r\n                onClick={() => dispatch(toggleWatchList(movie))}\r\n                icon={selected ? faHeart : Heart}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddWatchLater;\r\n","import React from \"react\";\r\n\r\nfunction Rating({ rate }) {\r\n    // #21ce79\r\n    // #c8cb2f\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"position-absolute\"\r\n                style={{ top: \"-40px\", left: \"15px\" }}\r\n            >\r\n                <div\r\n                    className=\"circle-rating d-flex justify-content-center align-items-center mx-auto\"\r\n                    style={{\r\n                        width: \"50px\",\r\n                        height: \"50px\",\r\n                        borderRadius: \"50%\",\r\n                        background: `conic-gradient(${\r\n                            rate * 10 >= 70 ? \"#21ce79\" : \"#ffc107\"\r\n                        } ${\r\n                            // percentage * 3.6\r\n                            rate * 10 * 3.6\r\n                        }deg, #e9ecef 0deg)`,\r\n                    }}\r\n                >\r\n                    <span\r\n                        className=\"text-dark d-flex align-items-center justify-content-center text-bg-dark text-white rounded-circle fs-4 fw-bold\"\r\n                        style={{\r\n                            width: \"40px\",\r\n                            height: \"40px\",\r\n                            // backgroundColor: \"red\",\r\n                        }}\r\n                    >\r\n                        {rate * 10}\r\n                        <span\r\n                            className=\"position-absolute \"\r\n                            style={{\r\n                                right: \"10px\",\r\n                                top: \"10px\",\r\n                                fontSize: \"8px\",\r\n                            }}\r\n                        >\r\n                            %\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Rating;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// context\r\nimport themeContext from \"../../context/themeContext\";\r\nimport languageContext from \"../../context/languageContext\";\r\n\r\n// conponents\r\nimport Rating from \"./Rating\";\r\nimport AddWatchLater from \"./AddWatchLater\";\r\nimport Loader from \"../loader/Loader\";\r\n\r\n// assest\r\nimport backdrop_image from \"../../assets/Images/error/no-image-available.jpg\";\r\n\r\nfunction MovieCard({ movie }) {\r\n    const navigate = useNavigate();\r\n    const { darkMode, setDarkMode } = useContext(themeContext);\r\n    const { language, setLanguage } = useContext(languageContext);\r\n\r\n    if (!movie) return <Loader />;\r\n    const {\r\n        id,\r\n        title,\r\n        release_date,\r\n        vote_average,\r\n        poster_path,\r\n        backdrop_path,\r\n    } = movie;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-12 col-md-4 col-lg-3 col-xl-2 \">\r\n                <div\r\n                    className={`card mb-2 border-0 shadow flex-fill h-100 ${\r\n                        darkMode ? \"text-bg-dark\" : \"\"\r\n                    }`}\r\n                >\r\n                    <img\r\n                        onClick={() => navigate(`/movie/${id}`)}\r\n                        role=\"button\"\r\n                        src={\r\n                            poster_path\r\n                                ? `${\r\n                                      process.env.REACT_APP_IMAGE_URL ||\r\n                                      process.env.REACT_APP_IMAGE_URL.slice(\r\n                                          1,\r\n                                          -2\r\n                                      )\r\n                                  }${poster_path || backdrop_path}`\r\n                                : `${backdrop_image}`\r\n                        }\r\n                        className={`card-img-top img-fluid rounded-3 ${\r\n                            darkMode ? \"text-bg-dark\" : \"\"\r\n                        }`}\r\n                        alt={`${title}`}\r\n                    />\r\n\r\n                    <div\r\n                        className={`card-body p-1 px-2 position-relative rounded mt-1 d-flex align-items-center justify-content-between ${\r\n                            darkMode ? \"text-bg-dark\" : \"\"\r\n                        }`}\r\n                    >\r\n                        <div className=\"mt-3\">\r\n                            <h5\r\n                                onClick={() => navigate(`/movie/${id}`)}\r\n                                role=\"button\"\r\n                                className=\"d-inline-block card-title mb-0 text-wrap\"\r\n                            >\r\n                                {title}\r\n                            </h5>\r\n\r\n                            <p className=\" m-0 text-secondary p-0\">\r\n                                {release_date}\r\n                            </p>\r\n                        </div>\r\n\r\n                        <Rating rate={parseInt(vote_average)} />\r\n\r\n                        <div className=\"mt-3\">\r\n                            <AddWatchLater movie={movie} key={id} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MovieCard;\r\n","// font awesome icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    // faStar,\r\n    faStarHalfAlt,\r\n    faStar as farStar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faStar } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nfunction Stars({ rating }) {\r\n    const fullStars = Math.floor(rating);\r\n    const hasHalfStar = rating - fullStars >= 0.25 && rating - fullStars < 0.99;\r\n    const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"rating-stars my-3\">\r\n                {[...Array(fullStars)].map((_, index) => (\r\n                    <FontAwesomeIcon\r\n                        key={index}\r\n                        icon={farStar}\r\n                        color=\"#2fa023\"\r\n                    />\r\n                ))}\r\n\r\n                {hasHalfStar && (\r\n                    <FontAwesomeIcon icon={faStarHalfAlt} color=\"#2fa023\" />\r\n                )}\r\n\r\n                {[...Array(emptyStars)].map((_, index) => (\r\n                    <FontAwesomeIcon icon={faStar} key={index} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Stars;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useContext } from \"react\";\r\n\r\n// context\r\nimport themeContext from \"../../context/themeContext\";\r\nimport languageContext from \"../../context/languageContext\";\r\n\r\nfunction NoRecommendation() {\r\n    const { darkMode, setDarkMode } = useContext(themeContext);\r\n    const { language, setLanguage } = useContext(languageContext);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"py-5 text-center\">\r\n                <h2 className=\"fw-bold text-capitalize\">\r\n                    {language === \"en\"\r\n                        ? \"No recommendation at this time\"\r\n                        : \"لا يوجد توصية في هذا الوقت\"}\r\n                </h2>\r\n                <h3 className=\"fw-bold text-capitalize\">\r\n                    {language === \"en\"\r\n                        ? \"will be added soon\"\r\n                        : \"سيتم اضافتها قريبا\"}\r\n                </h3>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NoRecommendation;\r\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/jsx-no-undef */\nimport { useParams } from \"react-router-dom\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n// context\nimport themeContext from \"../../context/themeContext\";\nimport languageContext from \"../../context/languageContext\";\n\n// components\nimport Loader from \"../loader/Loader\";\nimport MovieCard from \"../movie/MovieCard\";\nimport NoRecommendation from \"./NoRecommendation\";\n\nfunction Recommendations() {\n    const { id } = useParams();\n\n    const { darkMode, setDarkMode } = useContext(themeContext);\n    const { language, setLanguage } = useContext(languageContext);\n\n    const [recommendMovie, setRecommendMovie] = useState(null);\n    const [error, setError] = useState(false);\n\n    // get Recommendations # https://api.themoviedb.org/3/movie/533535/recommendations?api_key=fir9f4fmkd9dmi3994nfir4?language=en-US\n    useEffect(() => {\n        const fetchMoviesRecommend = async () => {\n            try {\n                await axios\n                    .get(\n                        `${\n                            process.env.REACT_APP_BASE_API_Link ||\n                            process.env.REACT_APP_BASE_API_Link.slice(1, -2)\n                        }movie/${id}/recommendations?api_key=${\n                            process.env.REACT_APP_API_KEY ||\n                            process.env.REACT_APP_API_KEY.slice(1, -2)\n                        }&language=${language === \"en\" ? \"en-US\" : \"ar\"}`\n                    )\n                    .then((response) => {\n                        setRecommendMovie(response.data.results);\n                    });\n            } catch (error) {\n                console.log(error);\n                setError(true);\n            }\n        };\n        fetchMoviesRecommend();\n    }, [id, language]);\n\n    if (!recommendMovie) return <Loader />;\n\n    return (\n        <>\n            <div\n                className={`Recommendations ${darkMode ? \"text-bg-dark\" : \"\"}`}\n            >\n                <div className=\"container py-5\">\n                    <div className=\"row\">\n                        <div className=\"title\">\n                            <h2 className=\"text-capitalize mb-4 fw-bold\">\n                                {language === \"en\"\n                                    ? \"Recommendations\"\n                                    : \"التوصيات\"}\n                            </h2>\n                        </div>\n                    </div>\n\n                    <div>\n                        {recommendMovie && recommendMovie?.length !== 0 ? (\n                            <div className=\"row gy-5 gx-3 \">\n                                {recommendMovie?.map((movie, index) => (\n                                    <React.Fragment key={index}>\n                                        <MovieCard movie={movie} />\n                                    </React.Fragment>\n                                ))}\n                            </div>\n                        ) : (\n                            <NoRecommendation />\n                        )}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Recommendations;\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// font awesome icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLink } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// context\r\nimport themeContext from \"../../context/themeContext\";\r\nimport languageContext from \"../../context/languageContext\";\r\n\r\n// components\r\nimport Loader from \"../loader/Loader\";\r\nimport AddWatchLater from \"../movie/AddWatchLater\";\r\n\r\n// assest\r\nimport backdrop_image from \"../../assets/Images/error/no-image-available.jpg\";\r\nimport Stars from \"../movie/Stars\";\r\n\r\nfunction DetailsCard() {\r\n    const { id } = useParams();\r\n\r\n    const { darkMode, setDarkMode } = useContext(themeContext);\r\n    const { language, setLanguage } = useContext(languageContext);\r\n\r\n    const [movie, setMovie] = useState(null);\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    // get movie # https://api.themoviedb.org/3/movie/533535?api_key=fir9f4fmkd9dmi3994nfir4?language=en-US\r\n    useEffect(() => {\r\n        const fetchMovies = async () => {\r\n            try {\r\n                await axios\r\n                    .get(\r\n                        `${\r\n                            process.env.REACT_APP_BASE_API_Link ||\r\n                            process.env.REACT_APP_BASE_API_Link.slice(1, -2)\r\n                        }movie/${id}?api_key=${\r\n                            process.env.REACT_APP_API_KEY ||\r\n                            process.env.REACT_APP_API_KEY.slice(1, -2)\r\n                        }&language=${language === \"en\" ? \"en-US\" : \"ar\"}`\r\n                    )\r\n                    .then((response) => {\r\n                        setMovie(response.data);\r\n                    });\r\n            } catch (error) {\r\n                console.log(error);\r\n                setError(true);\r\n            }\r\n        };\r\n        fetchMovies();\r\n    }, [id, language]);\r\n\r\n    if (!movie) return <Loader />;\r\n    // if (error) return <Empty resourceName=\"movies\" />;\r\n\r\n    const {\r\n        poster_path,\r\n        backdrop_path,\r\n        title,\r\n        release_date,\r\n        vote_average,\r\n        vote_count,\r\n        overview,\r\n        genres,\r\n        runtime,\r\n        homepage,\r\n        spoken_languages,\r\n        production_companies,\r\n    } = movie;\r\n\r\n    return (\r\n        <>\r\n            <div className={`moviedetails ${darkMode ? \"text-bg-dark\" : \"\"}`}>\r\n                <div className=\"container py-5 border-bottom\">\r\n                    <div className=\"row g-4 \">\r\n                        <div className=\"col-12 col-md-4 col-lg-4 rounded\">\r\n                            <div className=\"image\" style={{ height: \"100%\" }}>\r\n                                <img\r\n                                    className=\"rounded-4\"\r\n                                    style={{\r\n                                        alignSelf: \"center\",\r\n                                        height: \"100%\",\r\n                                        maxWidth: \"100%\",\r\n                                        backgroundSize: \"cover\",\r\n                                        backgroundPosition: \"center\",\r\n                                        backgroundImage: \"\",\r\n                                    }}\r\n                                    src={`${\r\n                                        poster_path\r\n                                            ? `${\r\n                                                  process.env\r\n                                                      .REACT_APP_IMAGE_URL ||\r\n                                                  process.env.REACT_APP_IMAGE_URL.slice(\r\n                                                      1,\r\n                                                      -2\r\n                                                  )\r\n                                              }${poster_path || backdrop_path}`\r\n                                            : `${backdrop_image}`\r\n                                    }`}\r\n                                    alt={`${title || \"not found\"}`}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-8 col-lg-8 \">\r\n                            <div className=\"card-body\">\r\n                                <div className=\"d-flex align-items-start justify-content-between mb-3\">\r\n                                    <div>\r\n                                        <h3 className=\"card-title fw-bolder d-inline text-capitalize\">\r\n                                            {title || \"not found\"}\r\n                                        </h3>\r\n\r\n                                        <h5\r\n                                            className={`fs-6 mt-1 ${\r\n                                                darkMode\r\n                                                    ? \"text-bg-dark\"\r\n                                                    : \"text-muted\"\r\n                                            }`}\r\n                                        >\r\n                                            {release_date}\r\n                                        </h5>\r\n                                    </div>\r\n\r\n                                    <div className=\" fs-3\">\r\n                                        <AddWatchLater movie={movie} key={id} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"d-flex align-items-center gap-3\">\r\n                                    <Stars\r\n                                        className=\"d-inline \"\r\n                                        rating={vote_average / 2}\r\n                                    />\r\n\r\n                                    <div>\r\n                                        <p className=\"d-inline \">\r\n                                            {vote_count}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"my-3\">\r\n                                <p className=\"card-text p-1 fw-medium\">\r\n                                    {overview}\r\n                                </p>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div>\r\n                                    {genres?.map((genre, index) => (\r\n                                        <React.Fragment key={index}>\r\n                                            <span className=\"badge badge-pill px-4 py-2 bg-warning text-dark me-2 mb-2 fw-normal rounded-5  text-capitalize\">\r\n                                                {genre?.name || \"not found\"}\r\n                                            </span>\r\n                                        </React.Fragment>\r\n                                    ))}\r\n                                </div>\r\n\r\n                                <div className={`mt-3 `}>\r\n                                    <p\r\n                                        className=\"d-inline\"\r\n                                        style={{ fontSize: \"15px\" }}\r\n                                    >\r\n                                        <span className=\"fw-bold px-2\">\r\n                                            {language === \"en\"\r\n                                                ? \"Duration\"\r\n                                                : \"المدة\"}\r\n                                            :\r\n                                        </span>\r\n                                        <span>\r\n                                            {(runtime / 60).toFixed(2)} h\r\n                                        </span>\r\n                                    </p>\r\n\r\n                                    <p\r\n                                        className={`d-inline px-4 `}\r\n                                        style={{ fontSize: \"15px\" }}\r\n                                    >\r\n                                        <span className=\"fw-bold px-2 text-capitalize\">\r\n                                            {language === \"en\"\r\n                                                ? \"Languages\"\r\n                                                : \"اللغة\"}\r\n                                            :\r\n                                        </span>\r\n\r\n                                        <span>\r\n                                            {spoken_languages?.map(\r\n                                                (lang, index) => (\r\n                                                    <React.Fragment key={index}>\r\n                                                        <span className=\"px-2\">\r\n                                                            {lang?.name ||\r\n                                                                \"English\"}\r\n                                                        </span>\r\n                                                    </React.Fragment>\r\n                                                )\r\n                                            )}\r\n                                        </span>\r\n                                    </p>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <img\r\n                                        style={{\r\n                                            display: \"block\",\r\n                                            width: \"40%\",\r\n                                            height: \"200px\",\r\n                                            padding: \"30px 0px 30px 0px\",\r\n                                            objectFit: \"fill\",\r\n                                        }}\r\n                                        src={\r\n                                            production_companies[0]?.logo_path\r\n                                                ? `${\r\n                                                      process.env\r\n                                                          .REACT_APP_IMAGE_URL ||\r\n                                                      process.env.REACT_APP_IMAGE_URL.slice(\r\n                                                          1,\r\n                                                          -2\r\n                                                      )\r\n                                                  }${\r\n                                                      production_companies[0]\r\n                                                          ?.logo_path\r\n                                                  }`\r\n                                                : `${backdrop_image}`\r\n                                        }\r\n                                        alt={`${\r\n                                            production_companies[0]?.name ||\r\n                                            \"not found\"\r\n                                        }`}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <a\r\n                                        className={`text-decoration-none badge border border-warning rounded-5 px-3 py-2  ${\r\n                                            darkMode\r\n                                                ? \"text-bg-dark\"\r\n                                                : \"text-secondary\"\r\n                                        }`}\r\n                                        href={homepage}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\"\r\n                                    >\r\n                                        <span className=\"mx-2\">\r\n                                            {language === \"en\"\r\n                                                ? \"Website\"\r\n                                                : \"الموقع\"}\r\n                                        </span>\r\n\r\n                                        <FontAwesomeIcon icon={faLink} />\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DetailsCard;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\n\r\n// component\r\nimport Recommendations from \"../../components/details/Recommendations\";\r\nimport DetailsCard from \"../../components/details/DetailsCard\";\r\n\r\nfunction MovieDetails() {\r\n    return (\r\n        <>\r\n            <DetailsCard />\r\n            <Recommendations />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MovieDetails;\r\n"],"names":["_ref","movie","dispatch","useDispatch","darkMode","setDarkMode","useContext","themeContext","language","setLanguage","languageContext","selected","setSelected","useState","watchlist","useSelector","state","useEffect","includes","_jsx","_Fragment","children","FontAwesomeIcon","className","style","right","top","role","onClick","toggleWatchList","icon","faHeart","Heart","rate","left","width","height","borderRadius","background","_jsxs","fontSize","navigate","useNavigate","Loader","id","title","release_date","vote_average","poster_path","backdrop_path","src","backdrop_image","alt","Rating","parseInt","AddWatchLater","rating","fullStars","Math","floor","hasHalfStar","emptyStars","Array","map","_","index","farStar","color","faStarHalfAlt","faStar","useParams","recommendMovie","setRecommendMovie","error","setError","async","axios","get","then","response","data","results","console","log","fetchMoviesRecommend","length","React","MovieCard","NoRecommendation","_production_companies","_production_companies2","_production_companies3","setMovie","fetchMovies","vote_count","overview","genres","runtime","homepage","spoken_languages","production_companies","alignSelf","maxWidth","backgroundSize","backgroundPosition","backgroundImage","Stars","genre","name","toFixed","lang","display","padding","objectFit","logo_path","href","target","rel","faLink","DetailsCard","Recommendations"],"sourceRoot":""}